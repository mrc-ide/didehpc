% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/client.R
\name{web_client}
\alias{web_client}
\title{DIDE cluster web client}
\description{
DIDE cluster web client

DIDE cluster web client
}
\details{
Client for the DIDE cluster web interface.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-web_client-new}{\code{web_client$new()}}
\item \href{#method-web_client-login}{\code{web_client$login()}}
\item \href{#method-web_client-logout}{\code{web_client$logout()}}
\item \href{#method-web_client-logged_in}{\code{web_client$logged_in()}}
\item \href{#method-web_client-check_access}{\code{web_client$check_access()}}
\item \href{#method-web_client-submit}{\code{web_client$submit()}}
\item \href{#method-web_client-cancel}{\code{web_client$cancel()}}
\item \href{#method-web_client-log}{\code{web_client$log()}}
\item \href{#method-web_client-status_user}{\code{web_client$status_user()}}
\item \href{#method-web_client-status_job}{\code{web_client$status_job()}}
\item \href{#method-web_client-load_node}{\code{web_client$load_node()}}
\item \href{#method-web_client-load_overall}{\code{web_client$load_overall()}}
\item \href{#method-web_client-load_show}{\code{web_client$load_show()}}
\item \href{#method-web_client-headnodes}{\code{web_client$headnodes()}}
\item \href{#method-web_client-r_versions}{\code{web_client$r_versions()}}
\item \href{#method-web_client-api_client}{\code{web_client$api_client()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-new"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-new}{}}}
\subsection{Method \code{new()}}{
Create an API client for the DIDE cluster
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$new(
  credentials = NULL,
  cluster_default = "fi--dideclusthn",
  login = FALSE,
  client = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{credentials}}{Either your username, or a list with at least
the element \code{username} and possibly the name `password. If not
given, your password will be prompted for at login.}

\item{\code{cluster_default}}{The default cluster to use; this can be
overridden in any command.}

\item{\code{login}}{Logical, indicating if we should immediately login}

\item{\code{client}}{Optional API client object - if given then we prefer
this object rather than trying to create a new client with the
given credentials.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-login"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-login}{}}}
\subsection{Method \code{login()}}{
Log in to the cluster
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$login(refresh = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{refresh}}{Logical, indicating if we should login even if
it looks like we are already (useful if login has expired)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-logout"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-logout}{}}}
\subsection{Method \code{logout()}}{
Log the client out
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$logout()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-logged_in"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-logged_in}{}}}
\subsection{Method \code{logged_in()}}{
Test whether the client is logged in, returning \code{TRUE}
or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$logged_in()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-check_access"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-check_access}{}}}
\subsection{Method \code{check_access()}}{
Validate that we have access to a given cluster
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$check_access(cluster = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cluster}}{The name of the cluster to check, defaulting to
the value given when creating the client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-submit"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-submit}{}}}
\subsection{Method \code{submit()}}{
Submit a job to the cluster
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$submit(
  path,
  name,
  template,
  cluster = NULL,
  resource_type = "Cores",
  resource_count = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{The path to the job to submit. This must be a windows (UNC)
network path, starting with two backslashes, and must be somewhere
that the cluster can see.}

\item{\code{name}}{The name of the job (will be displayed in the
web interface).}

\item{\code{template}}{The name of the template to use.}

\item{\code{cluster}}{The cluster to submit to, defaulting to the value
given when creating the client.}

\item{\code{resource_type}}{The type of resource to request (either \code{Cores}
or \code{Nodes})}

\item{\code{resource_count}}{The number of resources to request}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-cancel"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-cancel}{}}}
\subsection{Method \code{cancel()}}{
Cancel a cluster task
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$cancel(dide_id, cluster = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dide_id}}{The DIDE task id for the task}

\item{\code{cluster}}{The cluster that the task is running on, defaulting to
the value given when creating the client.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A named character vector with a status reported by the
cluster head node. Names will be the values of \code{dide_id}
and values one of \code{OK}, \code{NOT_FOUND}, \code{WRONG_USER}, \code{WRONG_STATE},
\code{ID_ERROR}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-log"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-log}{}}}
\subsection{Method \code{log()}}{
Get log from job
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$log(dide_id, cluster = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dide_id}}{The DIDE task id for the task}

\item{\code{cluster}}{The cluster that the task is running on, defaulting to
the value given when creating the client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-status_user"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-status_user}{}}}
\subsection{Method \code{status_user()}}{
Return status of all your jobs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$status_user(state = "*", cluster = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{state}}{The state the job is in. Can be one of \code{Running},
\code{Finished}, \code{Queued}, \code{Failed} or \code{Cancelled}. Or give \code{*}
for all states (this is the default).}

\item{\code{cluster}}{The cluster to query, defaulting to the value
given when creating the client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-status_job"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-status_job}{}}}
\subsection{Method \code{status_job()}}{
Return status of a single job
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$status_job(dide_id, cluster = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dide_id}}{The id of the job - this will be an integer}

\item{\code{cluster}}{The cluster to query, defaulting to the value
given when creating the client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-load_node"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-load_node}{}}}
\subsection{Method \code{load_node()}}{
Return an overall measure of cluster use, one
entry per node within a cluster.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$load_node(cluster = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cluster}}{The cluster to query, defaulting to
the value given when creating the client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-load_overall"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-load_overall}{}}}
\subsection{Method \code{load_overall()}}{
Return an overall measure of cluster use, one
entry per cluster that you have access to.
Helper function; wraps around \code{load_overall} and \code{load_node} and
always shows the output.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$load_overall()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-load_show"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-load_show}{}}}
\subsection{Method \code{load_show()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$load_show(cluster = NULL, nodes = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cluster}}{Cluster to show; if \code{TRUE} show the entire cluster
(via \code{load_overall}), if \code{NULL} defaults to the value given when the
client was created.}

\item{\code{nodes}}{Show the nodes when printing}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-headnodes"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-headnodes}{}}}
\subsection{Method \code{headnodes()}}{
Return a vector of known cluster headnodes. Typically
\code{\link[=valid_clusters]{valid_clusters()}} will be faster. This endpoint can
be used as a relatively fast "ping" to check that you are
logged in the client and server are talking properly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$headnodes(forget = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{forget}}{Logical, indicating we should re-fetch the value from
the server where we have previously fetched it.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-r_versions"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-r_versions}{}}}
\subsection{Method \code{r_versions()}}{
Return a vector of all available R versions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$r_versions()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-web_client-api_client"></a>}}
\if{latex}{\out{\hypertarget{method-web_client-api_client}{}}}
\subsection{Method \code{api_client()}}{
Returns the low-level API client for debugging
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{web_client$api_client()}\if{html}{\out{</div>}}
}

}
}
